env:
  repo:            "https://github.com/traefik/traefik.git"
  app_version:     "latest"
  repo_region:     "us-central1"
  project_id:      "${{ secrets.PROJECT_ID }}"
  app_name:        "traefik"
  tag_new_version: "${GITHUB_SHA}"

  # Sonar stuff, please update accordingly
  enable_sonar:    "false"
  sonar_organization: "malik20a"
  sonar_projectKey: "traefik-scan"
  sonar_login: "a4a0683b50f3347211d477ac0d186a4400ee5528"



# This is a basic workflow to help you get started with Actions

name: ContinuousDelivery

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  image-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Image from Docker Hub
        run: |
          docker pull traefik:latest
          docker image tag ${{ env.app_name }}:${{ env.app_version }} ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.app_name }}/${{ env.app_name }}:${{ env.tag_new_version }}

      # # Runs a set of commands using the runners shell
      # - name: Tag Image
      #   working-directory: ${{ env.app_name }}
      #   run: |
      #     docker image tag ${{ env.app_name }}:${{ env.app_version }} ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.app_name }}/${{ env.app_name }}:${{ env.tag_new_version }}     


      # Runs a single command using the runners shell
      - name: Verify Gcloud Installation
        run: gcloud version 


      # Authenticate to GCP
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'


      - name: Authenticate to repository
        run: |
          gcloud auth configure-docker  ${{ env.repo_region }}-docker.pkg.dev

          


      # Runs a set of commands using the runners shell
      - name: Image push
        # working-directory: ${{ env.app_name }}
        run: |
          docker push ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.app_name }}/${{ env.app_name }}:${{ env.tag_new_version }}